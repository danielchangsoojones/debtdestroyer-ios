name: Release with Wolfia ðŸš€
on:
  push:
    branches: [develop_production]
jobs:
  macos:
    runs-on: macos-latest
    if: ${{ contains(github.event.head_commit.message, 'Bump version') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Show Xcode version
        run: xcode-select -p
      - name: Build archive
        run: xcodebuild -workspace "./debtdestroyer.xcworkspace" -scheme "debtdestroyer" -archivePath "./archives/archive.xcarchive" archive -destination "generic/platform=iOS"
      - name: Locate dSYM files
        run: echo "DSYM_PATH=$(xcodebuild -workspace "./debtdestroyer.xcworkspace" -scheme "debtdestroyer" -configuration Release -showBuildSettings | grep " CONFIGURATION_BUILD_DIR " | awk '{print $3}')/debtdestroyer.app.dSYM" >> $GITHUB_ENV
      - name: Install sentry-cli
        run: curl -sL https://sentry.io/get-cli/ | bash
      - name: Upload dSYM files to Sentry
        env:
          SENTRY_AUTH_TOKEN: d1167196413c4c06b2d833b5df28c856c180bb264eea46d7b845bbed0280c758
          SENTRY_ORG_SLUG: blockstamp-inc
          SENTRY_PROJECT_SLUG: debtdestroyer-ios
        run: sentry-cli upload-dif --org $SENTRY_ORG_SLUG --project $SENTRY_PROJECT_SLUG $DSYM_PATH
      - name: Export archive and build IPA
        run: xcodebuild -exportArchive -archivePath "./archives/archive.xcarchive" -exportPath "./output" -exportOptionsPlist ./export.plist
      - name: Wolfia Deploy
        uses: wolfia-app/wolfia-deploy@v0.0.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          wolfia-api-key-id: ${{ vars.WOLFIA_API_KEY_ID }}
          wolfia-api-key-secret: ${{ secrets.WOLFIA_API_KEY_SECRET }}
          app-path: "./output/debtdestroyer.ipa"
          app-store-connect-api-key-id: ${{ vars.APP_CONNECT_API_KEY }}
          app-store-connect-api-issuer: ${{ vars.APP_CONNECT_API_ISSUER }}
          app-store-connect-secret-base64: ${{ secrets.APP_CONNECT_API_PRIVATE_KEY_BASE64 }}
      - name: Clean up (Delete keychain and provisioning profile)
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
